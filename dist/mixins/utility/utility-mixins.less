.clipped() {
    border: 0;
    clip: rect(1px, 1px, 1px, 1px);
    height: 1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    white-space: nowrap;
    width: 1px;
}

.unclipped() {
    clip: auto;
    height: auto;
    overflow: visible;
    white-space: normal;
    width: auto;
}

.truncate() {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.imageTreatment(@border-radius: 8px) {
    align-items: center;
    border-radius: @border-radius;
    display: flex;
    justify-content: center;
    overflow: hidden;
    position: relative;

    &::after {
        background: rgba(0, 0, 0, 0.05);
        bottom: 0;
        content: "";
        display: block;
        left: 0;
        position: absolute;
        right: 0;
        top: 0;
    }

    > img {
        display: inline-block;
        max-height: 100%;
        max-width: 100%;
        object-fit: contain;
    }
}

.flex-items-centered(@display: flex) {
    align-items: center;
    display: @display;
    justify-content: center;
}

.inline-flex-items-centered() {
    .flex-items-centered(inline-flex);
}

// token system

.customPropertyToken(@property, @token) {
    @{property}: var(~"--@{token}", @@token);
}

.customPropertyToken(@property, @component-token, @product-token) {
    @{property}: var(~"--@{component-token}", var(~"--@{product-token}", @@product-token));
}

.background-color-token(@token) {
    .customPropertyToken(background-color, @token);
}

.background-color-token(@component-token, @product-token) {
    .customPropertyToken(background-color, @component-token, @product-token);
}

.background-image-token(@token) {
    .customPropertyToken(background-image, @token);
}

.background-image-token(@component-token, @product-token) {
    .customPropertyToken(background-image, @component-token, @product-token);
}

.border-bottom-left-radius-token(@token) {
    .customPropertyToken(border-bottom-left-radius, @token);
}

.border-bottom-right-radius-token(@token) {
    .customPropertyToken(border-bottom-right-radius, @token);
}

.border-top-left-radius-token(@token) {
    .customPropertyToken(border-top-left-radius, @token);
}

.border-top-right-radius-token(@token) {
    .customPropertyToken(border-top-right-radius, @token);
}

.border-radius-token(@token) {
    .customPropertyToken(border-radius, @token);
}

.border-radius-token(@component-token, @product-token) {
    .customPropertyToken(border-radius, @component-token, @product-token);
}

.box-shadow-token(@component-token, @product-token) {
    .customPropertyToken(box-shadow, @component-token, @product-token);
}

.border-color-token(@component-token, @product-token) {
    .customPropertyToken(border-color, @component-token, @product-token);
}

.box-shadow-token(@token) {
    .customPropertyToken(box-shadow, @token);
}

.color-token(@token) {
    .customPropertyToken(color, @token);
}

.color-token(@component-token, @product-token) {
    .customPropertyToken(color, @component-token, @product-token);
}

.fill-token(@token) {
    .customPropertyToken(fill, @token);
}

.fill-token(@component-token, @product-token) {
    .customPropertyToken(fill, @component-token, @product-token);
}

.outline-color-token(@component-token, @product-token) {
    .customPropertyToken(outline-color, @component-token, @product-token);
}
