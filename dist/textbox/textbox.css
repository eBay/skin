/* Responsive Breakpoints */
/* The first breakpoint simply indicates minimum support level. It should not be used with media queries. */
/* Mobile-first means the default layout applies to mobile and there should be no mimimums even though */
/* most mobile devices would be higher in screen width than the smallest viewport width. */
/* The variables with underscores are to be considered constants. They can be read, but should not be modified. */
/* TODO: remove these in next major version */
/* secret size */
.textbox {
    color: var(
        --textbox-foreground-color,
        var(--color-foreground-on-secondary)
    );
    background-color: var(
        --textbox-background-color,
        var(--color-background-secondary)
    );
    border-color: var(--textbox-border-color, var(--color-stroke-default));
    border-radius: var(--textbox-border-radius, var(--border-radius-50));
    align-items: center;
    border-style: solid;
    border-width: 1px;
    box-sizing: border-box;
    display: inline-flex;
    /* to align with buttons and select, it needs same font-size */
    font-size: var(--font-size-default);
    position: relative;
    width: fit-content;
    gap: var(--spacing-100);
}
.textbox button.icon-btn {
    background-color: transparent;
    padding: 0;
}

/* `.textbox--focus` should be removed after full browser support for `:has` */
.textbox--focus,
.textbox:has(> .textbox__control:focus):not(
        .textbox--readonly,
        :has(> .textbox__control[readonly])
    ) {
    box-shadow: 0 0 0 0.5pt var(--color-stroke-strong);
    border-color: var(--textbox-focus-border-color, var(--color-stroke-strong));
    background-color: var(
        --textbox-focus-background-color,
        var(--color-background-primary)
    );
}

/* `.textbox--readonly` should be removed after full browser support for `:has` */
.textbox--readonly,
.textbox:has(> .textbox__control[readonly]) {
    background-color: transparent;
    border: none;
}

/* `.textbox--disabled` should be removed after full browser support for `:has` */
.textbox--disabled,
.textbox:has(> .textbox__control[disabled]) {
    border-color: var(
        --textbox-disabled-border-color,
        var(--color-background-disabled)
    );
    color: var(
        --textbox-disabled-foreground-color,
        var(--color-foreground-disabled)
    );
}

/* `.textbox--invalid` should be removed after full browser support for `:has` */
.textbox--invalid,
.textbox:has(> .textbox__control[aria-invalid="true"]) {
    border-color: var(
        --textbox-invalid-border-color,
        var(--color-stroke-attention)
    );
}

.textbox__control {
    background-color: transparent;
    border: none;
    color: inherit;
    box-sizing: border-box;
}

textarea.textbox__control {
    font-family: inherit;
    min-height: 200px;
    overflow: auto;
    padding: var(--spacing-200);
    /* stylelint-disable-next-line plugin/no-unsupported-browser-features */
    resize: vertical;
    vertical-align: middle;
}

input.textbox__control {
    font-family: inherit;
    vertical-align: middle;
    padding: 0;
}

input.textbox__control:first-child:not([readonly]) {
    padding-inline-start: var(--spacing-200);
}

input.textbox__control:last-child:not([readonly]) {
    padding-inline-end: var(--spacing-200);
}

input.textbox__control,
textarea.textbox__control {
    appearance: none;
    flex-grow: 1;
    font-size: 1em;
    outline: none;
    height: 40px;
    margin: 0; /* Remove the margin in Firefox and Safari. */
}
input.textbox__control[disabled],
textarea.textbox__control[disabled] {
    border-color: var(
        --textbox-disabled-border-color,
        var(--color-background-disabled)
    );
    color: var(
        --textbox-disabled-foreground-color,
        var(--color-foreground-disabled)
    );
}
input.textbox__control[disabled]::-webkit-input-placeholder,
textarea.textbox__control[disabled]::-webkit-input-placeholder {
    color: var(
        --textbox-disabled-placeholder-color,
        var(--color-foreground-ghost)
    );
}
input.textbox__control[disabled]::-moz-placeholder,
textarea.textbox__control[disabled]::-moz-placeholder {
    color: var(
        --textbox-disabled-placeholder-color,
        var(--color-foreground-ghost)
    );
}
input.textbox__control[disabled]:-ms-input-placeholder,
textarea.textbox__control[disabled]:-ms-input-placeholder {
    color: var(
        --textbox-disabled-placeholder-color,
        var(--color-foreground-ghost)
    );
}
input.textbox__control[aria-invalid="true"],
textarea.textbox__control[aria-invalid="true"] {
    border-color: var(
        --textbox-invalid-foreground-color,
        var(--color-stroke-attention)
    );
}
input.textbox__control::-webkit-input-placeholder,
textarea.textbox__control::-webkit-input-placeholder {
    color: var(
        --textbox-placeholder-color,
        var(--color-foreground-on-secondary)
    );
    font-weight: 200;
}
input.textbox__control::-moz-placeholder,
textarea.textbox__control::-moz-placeholder {
    color: var(
        --textbox-placeholder-color,
        var(--color-foreground-on-secondary)
    );
    font-weight: 200;
}
input.textbox__control:-ms-input-placeholder,
textarea.textbox__control:-ms-input-placeholder {
    color: var(
        --textbox-placeholder-color,
        var(--color-foreground-on-secondary)
    );
    font-weight: 200;
}
input.textbox__control::placeholder,
textarea.textbox__control::placeholder {
    color: var(--textbox-placeholder-color, var(--color-foreground-secondary));
    font-weight: 200;
    opacity: 1;
}

.textbox--large > input.textbox__control {
    height: 48px;
}

.textbox > svg,
.textbox .icon-btn > svg {
    color: var(--textbox-icon-color, var(--color-foreground-secondary));
    display: inline-flex;
    fill: var(--textbox-icon-color, var(--color-foreground-secondary));
    pointer-events: none;
    width: 14px;
}

.textbox > svg:first-child,
.textbox > span:first-child {
    margin-inline-start: var(--spacing-200);
}

.textbox > svg:last-child,
.textbox > span:last-child {
    margin-inline-end: var(--spacing-200);
}

.textbox .icon-btn:last-child {
    margin-inline-start: calc(var(--spacing-100) * -1);
}

.textbox .icon-btn:first-child {
    margin-inline-end: calc(var(--spacing-100) * -1);
}

input.textbox__control[readonly]:focus,
textarea.textbox__control[readonly]:focus {
    text-decoration: underline;
}

.textbox--fluid {
    width: 100%;
}

/*# sourceMappingURL=textbox.css.map */
