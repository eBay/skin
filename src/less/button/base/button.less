@import "../../mixins/utility/utility-mixins.less";

// button[aria-disabled="true"] is a partially disabled button
// button[aria-live="polite"] is a button with a potential loading/busy state
// button[aria-live="polite"][aria-disabled="true"] is a button in a loading/busy state
// a:not([href]) is a disabled link

button.btn,
a.fake-btn {
    .btn-base();

    background-color: transparent;
    .border-radius-token(btn-border-radius, border-radius-button);
    color: inherit;
    display: inline-block;
    font-size: @font-size-14;
    min-height: 40px;
    min-width: @min-width-button;
    padding: @padding-vertical-button @padding-horizontal-button;
}

button.btn--wide,
a.fake-btn--wide {
    padding-left: @padding-horizontal-button-wide;
    padding-right: @padding-horizontal-button-wide;
}

button.btn[disabled],
a.fake-btn:not([href]),
button.btn[aria-disabled="true"],
a.fake-btn[aria-disabled="true"] {
    opacity: @opacity-action-disabled;
}

a.fake-btn:visited {
    color: inherit;
}

button.btn--fluid,
a.fake-btn--fluid {
    width: 100%;
}

.btn__cell,
.fake-btn__cell {
    .btn-cell-base();

    justify-content: center;
}

button.btn svg.icon,
a.fake-btn svg.icon {
    .btn-icon-base();

    flex-shrink: 0;
    height: 100%;
    max-height: 40px - (@padding-vertical-button * 2);
    width: 1em;
}

button.btn__cell--fixed-height svg.icon,
a.fake-btn__cell--fixed-height svg.icon {
    align-self: center;
    height: 1rem;
    overflow: visible;
    width: 1rem;
}

button.btn--primary,
a.fake-btn--primary {
    .background-color-token(btn-primary-background-color, color-action-primary);
    .border-color-token(btn-primary-border-color, color-action-primary);
    .color-token(btn-primary-foreground-color, color-background-default);
    font-weight: @font-weight-action-primary;
}

a.fake-btn--primary {
    outline-color: @color-text-primary; // fixes invisible focus outline in Firefox
}

/* show hover states only for non-disabled or non-loading state button */
button.btn--primary:not([disabled]):not([aria-disabled="true"]),
a.fake-btn--primary[href] {
    &:focus,
    &:hover,
    &:active {
        .background-color-token(btn-primary-hover-background-color, color-action-hover);
        .border-color-token(btn-primary-hover-border-color, color-action-hover);
    }
}

button.btn--primary:not([disabled]):not([aria-disabled="true"]),
a.fake-btn--primary[href] {
    &:active {
        .background-color-token(btn-primary-active-background-color, color-action-active);
        .border-color-token(btn-primary-active-border-color, color-action-active);
    }
}

a.fake-btn--primary:visited {
    .color-token(btn-primary-foreground-color, color-background-default);
}

button.btn .progress-spinner {
    height: 24px;
    margin: -4px 0;
    width: 24px;
}

button.btn svg.icon--dropdown,
a.fake-btn svg.icon--dropdown {
    height: 5.25px;
    width: 9px;
}

button.btn[aria-expanded="true"] svg.icon--dropdown,
a.fake-btn[aria-expanded="true"] svg.icon--dropdown {
    transform: rotate(180deg);
}

button.btn--large svg.icon,
a.fake-btn--large svg.icon {
    max-height: 48px - (@padding-vertical-button-large * 2);
}

button.btn--primary[disabled],
button.btn--primary[aria-disabled="true"]:not([aria-live="polite"][aria-disabled="true"]) {
    .background-color-token(btn-primary-disabled-background-color, color-action-primary-disabled);
    .border-color-token(btn-primary-disabled-border-color, color-action-primary-disabled);
    .color-token(btn-primary-disabled-foreground-color, color-background-default);

    svg.icon {
        .fill-token(btn-primary-disabled-foreground-color, color-background-default);
    }
}

a.fake-btn--primary:not([href]),
a.fake-btn--primary[aria-disabled="true"] {
    .background-color-token(btn-primary-disabled-background-color, color-action-primary-disabled);
    .border-color-token(btn-primary-disabled-border-color, color-action-primary-disabled);
    .color-token(btn-primary-disabled-foreground-color, color-background-default);
}

/* stylelint-disable no-descending-specificity */
a.fake-btn--secondary:visited {
    .color-token(btn-secondary-foreground-color, color-b4);
}

button.btn--secondary,
a.fake-btn--secondary {
    .background-color-token(btn-secondary-background-color, color-background-default);
    .border-color-token(btn-secondary-border-color, color-b4);
    .color-token(btn-secondary-foreground-color, color-b4);
}

/* show hover states only for non-disabled or non-loading state button */
button.btn--secondary:not([disabled]):not([aria-disabled="true"]),
a.fake-btn--secondary[href] {
    &:hover,
    &:focus {
        .background-color-token(btn-secondary-hover-background-color, color-white);
        .border-color-token(btn-secondary-hover-foreground-color, color-b5);
        .color-token(btn-secondary-hover-foreground-color, color-b5);
    }
}

button.btn--secondary:not([disabled]):not([aria-disabled="true"]),
a.fake-btn--secondary[href] {
    &:active {
        .background-color-token(btn-secondary-active-background-color, color-white);
        .border-color-token(btn-secondary-active-foreground-color, color-b6);
        .color-token(btn-secondary-active-foreground-color, color-b6);
    }
}
/* stylelint-enable no-descending-specificity */

button.btn--delete,
a.fake-btn--delete {
    .background-color-token(btn-delete-background-color, color-background-default);
    .border-color-token(btn-delete-foreground-color, color-status-attention);
    .color-token(btn-delete-foreground-color, color-status-attention);

    &:focus,
    &:hover,
    &:active,
    &:visited {
        .border-color-token(btn-delete-foreground-color, color-status-attention);
        .color-token(btn-delete-foreground-color, color-status-attention);
    }
}

/* stylelint-disable no-descending-specificity */
button.btn--secondary[disabled],
button.btn--delete[disabled],
button.btn--secondary[aria-disabled="true"]:not([aria-live="polite"][aria-disabled="true"]),
button.btn--delete[aria-disabled="true"]:not([aria-live="polite"][aria-disabled="true"]) {
    .background-color-token(btn-secondary-disabled-background-color, color-background-default);
    .border-color-token(btn-secondary-disabled-border-color, color-grey3);
    .color-token(btn-secondary-disabled-foreground-color, color-grey3);

    svg.icon {
        .fill-token(btn-secondary-disabled-foreground-color, color-disabled);
    }
}
/* stylelint-enable no-descending-specificity */

a.fake-btn--secondary:not([href]),
a.fake-btn--secondary[aria-disabled="true"],
a.fake-btn--delete:not([href]),
a.fake-btn--delete[aria-disabled="true"] {
    .border-color-token(btn-secondary-disabled-border-color, color-grey3);
    .color-token(btn-secondary-disabled-foreground-color, color-grey3);
}

button.btn--tertiary,
a.fake-btn--tertiary {
    .background-color-token(btn-tertiary-background-color, color-action-tertiary);
    .border-color-token(btn-tertiary-border-color, color-grey1);
    .color-token(btn-tertiary-foreground-color, color-b4);
}

/* show hover states only for non-disabled or non-loading state button */
button.btn--tertiary:not([disabled]):not([aria-disabled="true"]),
a.fake-btn--tertiary[href] {
    &:focus,
    &:hover {
        .background-color-token(btn-tertiary-hover-background-color, color-grey2);
        .border-color-token(btn-tertiary-hover-border-color, color-grey2);
        .color-token(btn-tertiary-hover-color, color-b5);
    }
}

button.btn--tertiary:not([disabled]):not([aria-disabled="true"]),
a.fake-btn--tertiary[href] {
    &:active {
        .background-color-token(btn-tertiary-active-background-color, color-grey3);
        .border-color-token(btn-tertiary-active-border-color, color-grey3);
        .color-token(btn-tertiary-hover-color, color-b6);
    }
}

a.fake-btn--tertiary:visited {
    .color-token(btn-tertiary-foreground-color, color-b4);
}

button.btn--tertiary[disabled],
button.btn--tertiary[aria-disabled="true"]:not([aria-live="polite"][aria-disabled="true"]) {
    .background-color-token(btn-tertiary-disabled-background-color, color-grey1);
    .border-color-token(btn-tertiary-disabled-border-color, color-grey1);
    .color-token(btn-tertiary-disabled-foreground-color, color-grey3);
}

a.fake-btn--tertiary:not([href]),
a.fake-btn--tertiary[aria-disabled="true"] {
    .background-color-token(btn-tertiary-disabled-background-color, color-grey1);
    .border-color-token(btn-tertiary-disabled-border-color, color-grey1);
    .color-token(btn-tertiary-disabled-foreground-color, color-grey3);
}

button.btn--large,
a.fake-btn--large {
    font-size: @font-size-button-large;
    min-height: 48px;
    padding: @padding-vertical-button-large @padding-horizontal-button;
}

button.btn--transparent,
a.fake-btn--transparent {
    background-color: transparent;

    &:hover,
    &:focus {
        background-color: transparent;
    }
}

button.btn--fixed-height,
a.fake-btn--fixed-height {
    padding-top: calc(21.5px - 0.75em);
}

button.btn--large-fixed-height,
a.fake-btn--large-fixed-height {
    height: 48px;
    min-height: 48px;
    padding-top: calc(27px - 0.75em);
}

button.btn--truncated,
a.fake-btn--truncated {
    .btn-truncate();
}

button.btn--large-truncated,
a.fake-btn--large-truncated {
    .btn-truncate();

    font-size: @font-size-button-large;
    height: 48px;
    min-height: 48px;
    padding: @padding-vertical-button-large @padding-horizontal-button;
}

[dir="rtl"] button.btn svg.icon--dropdown,
[dir="rtl"] a.fake-btn svg.icon--dropdown {
    &:first-child {
        margin-left: 8px;
        margin-right: 0;
    }

    &:last-child {
        margin-left: 0;
        margin-right: 8px;
    }
}
