@import "../../mixins/utility/utility-mixins.less";

// button[aria-disabled="true"] is a partially disabled button
// button[aria-live="polite"] is a button with a potential loading/busy state
// button[aria-live="polite"][aria-disabled="true"] is a button in a loading/busy state
// a:not([href]) is a disabled link

button.btn,
a.fake-btn {
    .btn-base();
    .customBorderRadiusProperty(button-border-radius);
    .customPaddingProperty(button-padding-vertical, button-padding-horizontal);

    background-color: transparent;
    color: inherit;
    display: inline-block;
    font-size: @font-size-14;
    min-height: 40px;
    min-width: @button-min-width;
}

button.btn--wide,
a.fake-btn--wide {
    padding-left: @button-wide-padding-horizontal;
    padding-right: @button-wide-padding-horizontal;
}

button.btn[disabled],
a.fake-btn:not([href]),
button.btn[aria-disabled="true"],
a.fake-btn[aria-disabled="true"] {
    opacity: @button-disabled-opacity;
}

a.fake-btn:visited {
    color: inherit;
}

button.btn--fluid,
a.fake-btn--fluid {
    width: 100%;
}

.btn__cell,
.fake-btn__cell {
    .btn-cell-base();

    justify-content: center;
}

button.btn svg.icon,
a.fake-btn svg.icon {
    .btn-icon-base();

    flex-shrink: 0;
    height: 100%;
    max-height: 40px - (@button-padding-vertical * 2);
    width: 1em;
}

button.btn__cell--fixed-height svg.icon,
a.fake-btn__cell--fixed-height svg.icon {
    align-self: center;
    height: 1rem;
    overflow: visible;
    width: 1rem;
}

button.btn--primary,
a.fake-btn--primary {
    .customBackgroundColorProperty(button-primary-background-color);
    .customBorderColorProperty(button-primary-border-color);
    .customColorProperty(button-primary-foreground-color);

    font-weight: @button-primary-font-weight;
}

/* show hover states only for non-disabled or non-loading state button */
button.btn--primary:not([disabled]):not([aria-live="polite"][aria-disabled="true"]),
a.fake-btn--primary[href] {
    &:focus,
    &:hover,
    &:active {
        .customBackgroundColorProperty(button-primary-hover-background-color);
        .customBorderColorProperty(button-primary-hover-border-color);
    }
}

a.fake-btn--primary:visited {
    .customColorProperty(button-primary-foreground-color);
}

button.btn .progress-spinner {
    height: 24px;
    margin: -4px 0;
    width: 24px;
}

button.btn--large svg.icon,
a.fake-btn--large svg.icon {
    max-height: 48px - (@button-large-padding-vertical * 2);
}

button.btn--primary[disabled],
button.btn--primary[aria-disabled="true"]:not([aria-live="polite"][aria-disabled="true"]) {
    .customBackgroundColorProperty(button-primary-disabled-background-color);
    .customBorderColorProperty(button-primary-disabled-border-color);
    .customColorProperty(button-primary-disabled-foreground-color);

    svg.icon {
        .customFillProperty(button-primary-disabled-foreground-color);
    }
}

a.fake-btn--primary:not([href]),
a.fake-btn--primary[aria-disabled="true"] {
    .customBackgroundColorProperty(button-primary-disabled-background-color);
    .customBorderColorProperty(button-primary-disabled-border-color);
    .customColorProperty(button-primary-disabled-foreground-color);
}

/* stylelint-disable no-descending-specificity */
a.fake-btn--secondary:visited {
    .customColorProperty(button-secondary-foreground-color);
}

button.btn--secondary,
a.fake-btn--secondary {
    .customBackgroundColorProperty(button-secondary-background-color);
    .customBorderColorProperty(button-secondary-border-color);
    .customColorProperty(button-secondary-foreground-color);
}

/* show hover states only for non-disabled or non-loading state button */
button.btn--secondary:not([disabled]):not([aria-live="polite"][aria-disabled="true"]),
a.fake-btn--secondary[href] {
    &:hover,
    &:focus,
    &:active {
        .customBackgroundColorProperty(button-secondary-hover-background-color);
        .customBorderColorProperty(button-secondary-hover-foreground-color);
        .customColorProperty(button-secondary-hover-foreground-color);
    }
}
/* stylelint-enable no-descending-specificity */

button.btn--delete,
a.fake-btn--delete {
    .customBackgroundColorProperty(button-delete-background-color);
    .customBorderColorProperty(button-delete-foreground-color);
    .customColorProperty(button-delete-foreground-color);

    &:focus,
    &:hover,
    &:active,
    &:visited {
        .customBorderColorProperty(button-delete-foreground-color);
        .customColorProperty(button-delete-foreground-color);
    }
}

/* stylelint-disable no-descending-specificity */
button.btn--secondary[disabled],
button.btn--delete[disabled],
button.btn--secondary[aria-disabled="true"]:not([aria-live="polite"][aria-disabled="true"]),
button.btn--delete[aria-disabled="true"]:not([aria-live="polite"][aria-disabled="true"]) {
    .customBackgroundColorProperty(button-secondary-disabled-background-color);
    .customBorderColorProperty(button-secondary-disabled-border-color);
    .customColorProperty(button-secondary-disabled-foreground-color);

    svg.icon {
        .customFillProperty(button-secondary-disabled-foreground-color);
    }
}
/* stylelint-enable no-descending-specificity */

a.fake-btn--secondary:not([href]),
a.fake-btn--secondary[aria-disabled="true"],
a.fake-btn--delete:not([href]),
a.fake-btn--delete[aria-disabled="true"] {
    .customBorderColorProperty(button-secondary-disabled-border-color);
    .customColorProperty(button-secondary-disabled-foreground-color);
}

button.btn--tertiary,
a.fake-btn--tertiary {
    .customBackgroundColorProperty(button-tertiary-background-color);
    .customBorderColorProperty(button-tertiary-border-color);
    .customColorProperty(button-tertiary-foreground-color);
}

/* show hover states only for non-disabled or non-loading state button */
button.btn--tertiary:not([disabled]):not([aria-live="polite"][aria-disabled="true"]),
a.fake-btn--tertiary[href] {
    &:focus,
    &:hover,
    &:active {
        .customBackgroundColorProperty(button-tertiary-hover-background-color);
        .customBorderColorProperty(button-tertiary-hover-border-color);
    }
}

a.fake-btn--tertiary:visited {
    .customColorProperty(button-tertiary-foreground-color);
}

button.btn--tertiary[disabled],
button.btn--tertiary[aria-disabled="true"]:not([aria-live="polite"][aria-disabled="true"]) {
    .customBackgroundColorProperty(button-tertiary-disabled-background-color);
    .customBorderColorProperty(button-tertiary-disabled-border-color);
    .customColorProperty(button-tertiary-disabled-foreground-color);
}

a.fake-btn--tertiary:not([href]),
a.fake-btn--tertiary[aria-disabled="true"] {
    .customBackgroundColorProperty(button-tertiary-disabled-background-color);
    .customBorderColorProperty(button-tertiary-disabled-border-color);
    .customColorProperty(button-tertiary-disabled-foreground-color);
}

button.btn--large,
a.fake-btn--large {
    .customPaddingProperty(button-large-padding-vertical, button-padding-horizontal);

    font-size: @button-large-font-size;
    min-height: 48px;
}

button.btn--transparent,
a.fake-btn--transparent {
    background-color: transparent;

    &:hover,
    &:focus {
        background-color: transparent;
    }
}

button.btn--fixed-height,
a.fake-btn--fixed-height {
    padding-top: calc(21.5px - 0.75em);
}

button.btn--large-fixed-height,
a.fake-btn--large-fixed-height {
    height: 48px;
    min-height: 48px;
    padding-top: calc(27px - 0.75em);
}

button.btn--truncated,
a.fake-btn--truncated {
    .btn-truncate();
}

button.btn--large-truncated,
a.fake-btn--large-truncated {
    .customPaddingProperty(button-large-padding-vertical, button-padding-horizontal);
    .btn-truncate();

    font-size: @button-large-font-size;
    height: 48px;
    min-height: 48px;
}

button.btn--icon-only,
a.fake-btn--icon-only {
    .customBorderRadiusProperty(button-icon-only-border-radius);

    min-width: auto;
    padding: 0;
}

a.fake-btn--icon-only {
    display: inline-flex;
}

@media (prefers-color-scheme: dark) {
    .skin-experiment-dark-mode {
        button.btn,
        a.fake-btn {
            --button-primary-background-color: @color-b4-dark-mode;
            --button-primary-foreground-color: @color-black-dark-mode;
            --button-primary-hover-background-color: @color-b6-dark-mode;
            --button-primary-border-color: @color-b4-dark-mode;
            --button-primary-hover-border-color: @color-b6-dark-mode;
            --button-secondary-background-color: @color-black-dark-mode;
            --button-secondary-border-color: @color-b4-dark-mode;
            --button-secondary-foreground-color: @color-b4-dark-mode;
            --button-secondary-hover-background-color: @color-black-dark-mode;
            --button-secondary-hover-foreground-color: @color-b6-dark-mode;
            --button-delete-background-color: @color-black-dark-mode;
            --button-delete-foreground-color: @color-r4-dark-mode;
            --button-primary-disabled-background-color: @color-grey3-dark-mode;
            --button-primary-disabled-foreground-color: @color-black-dark-mode;
            --button-primary-disabled-border-color: @color-grey3-dark-mode;
            --button-secondary-disabled-background-color: @color-black-dark-mode;
            --button-secondary-disabled-foreground-color: @color-grey3-dark-mode;
            --button-secondary-disabled-border-color: @color-grey3-dark-mode;
            --button-tertiary-foreground-color: @color-b4-dark-mode;
            --button-tertiary-background-color: @color-grey1-dark-mode;
            --button-tertiary-border-color: @color-grey1-dark-mode;
            --button-tertiary-hover-background-color: @color-grey2-dark-mode;
            --button-tertiary-hover-border-color: @color-grey2-dark-mode;
            --button-tertiary-hover-foreground-color: @color-b6-dark-mode;
            --button-tertiary-disabled-background-color: @color-grey1-dark-mode;
            --button-tertiary-disabled-border-color: @color-grey1-dark-mode;
            --button-tertiary-disabled-foreground-color: @color-grey3-dark-mode;
        }
    }
}
