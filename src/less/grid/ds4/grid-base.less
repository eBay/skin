@import "./grid-variables.less";
@import "./grid-mixins.less";
@import "../../less/ds4/variables.less";
@import "../../less/ds4/mixins.less";

/**
 * Base class for creating a container that
 * holds a grid
 *
 * Note: Think about pulling the max width into
 * a separate class
 */
.grid {
    box-sizing: border-box;
    max-width: 1280px;
    padding-left: 0;
    padding-right: 0;

    /**
    * Core nesting features
    */
    .grid {
        margin-right: -@grid-gutter; //This allows the percentage widths to work

        .@{group-name} {
            padding-left: 0;
        }
    }

    .grid--ignore-nesting {
        margin-right: 0;

        & > .@{group-name} {
            padding-left: @grid-gutter;
        }
    }
}

/**
 * Creates the gutters for the row.
 * This is a base class used to extend
 * other classes
 *
 * Note: Do we really need this? Can we move this logic
 * into the .grid--row-cell and .grid__row class and
 * remove the extend in those classes?
 */
.grid--gutters {
    padding-left: @grid-gutter;
}

/**
 * Used as a grouping container
 *
 * This class extends .grid--gutters
 */
.@{group-name} {
    &:extend(.grid--gutters);

    align-items: flex-start;
    box-sizing: border-box;
    display: flex;
    list-style: none;
    margin-right: -@grid-gutter; //This allows the percentage widths to work
    width: 100%;
}

/**
 * Creates a single row that also works
 * as a grid__cell
 *
 * This class extends .grid--gutters
 */
.@{group-name}--full {
    &:extend(.grid--gutters);

    display: block;
    padding-right: @grid-gutter;

    @media (max-width: @screen-sm-max) {
        padding-left: @small-grid-gutter;
        padding-right: @small-grid-gutter;
    }
}

//element
//TODO: This needs to float when we aren't using flexbox

.@{item-name} {
    box-sizing: border-box;
    min-height: 1px;
    padding-right: @grid-gutter;
}

//modifier
.@{item-name}--grow {
    flex: 1 1 auto;
}

/**
 * Used to allow the content in the
 * flex container to wrap as the
 * screen gets smaller
 */
.@{group-name}--wrap {
    flex-wrap: wrap;
}

/**
 * Removes the gutters of a row
 * Don't think we need this anymore
 */
.@{group-name}--no-gutters {
    padding-left: 0;
}

/**
 * Removes the padding at the top of the row
 * Don't know if we need these
 */
.@{group-name}--collapse-top {
    padding-top: 0;
}

/**
 * Removes the padding at the bottom of the row
 * Don't know if we need these
 */
.@{group-name}--collapse-bottom {
    padding-bottom: 0;
}

.common_fractions(0, 0);

@media (min-width: @screen-lg-min) {
    .@{item-name}--lg-hidden {
        display: none;
    }
}

@media (min-width: @screen-md-min) and (max-width: @screen-md-max) {
    .@{item-name}--md-hidden {
        display: none;
    }
}

//Don't think we need this with flexbox
.@{item-name}--offset--one-eighth {
    margin-left: 12.5%;
}
