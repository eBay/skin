@import "../variables/variables.less";
@import "../mixins/private/token-mixins.less";

.textbox {
    .color-token(textbox-foreground-color, color-background-secondary);
    font-size: @font-size-regular; // to align with buttons and select, it needs same font-size
    position: relative;

    button.icon-btn {
        background-color: transparent;
        display: inline-flex;
        height: 100%;
        justify-content: center;
        padding: 0;
        position: absolute;
        right: 0;
        top: 0;
    }
}

span.textbox {
    display: inline-block;
}

textarea.textbox__control {
    font-family: inherit;
    min-height: 200px;
    overflow: auto;
    padding: @spacing-200;
    resize: vertical;
    vertical-align: middle;
}

input.textbox__control {
    font-family: inherit;
    padding: 0 @spacing-200;
    vertical-align: middle;
}

input.textbox__control,
textarea.textbox__control {
    appearance: none;
    .background-color-token(textbox-background-color, color-background-secondary);
    .border-color-token(textbox-border-color, color-stroke-default);
    .border-radius-token(textbox-border-radius, border-radius-50);
    border-style: solid;
    border-width: 1px;
    box-sizing: border-box;
    .color-token(textbox-foreground-color, color-foreground-on-secondary);
    font-size: 1em;
    height: 40px;
    margin: 0; // Remove the margin in Firefox and Safari.

    &[disabled] {
        .border-color-token(textbox-disabled-border-color, color-background-disabled);
        .color-token(textbox-disabled-foreground-color, color-foreground-disabled);

        &::-webkit-input-placeholder {
            .color-token(textbox-disabled-placeholder-color, color-foreground-ghost);
        }

        &::-moz-placeholder {
            .color-token(textbox-disabled-placeholder-color, color-foreground-ghost);
        }

        &:-ms-input-placeholder {
            .color-token(textbox-disabled-placeholder-color, color-foreground-ghost);
        }
    }

    &[readonly] {
        background-color: transparent;
        border: none;
        padding-left: 0;
        padding-right: 0;
    }

    &[aria-invalid="true"] {
        .border-color-token(textbox-invalid-foreground-color, color-stroke-attention);
    }

    &::-webkit-input-placeholder {
        .color-token(textbox-placeholder-color, color-foreground-on-secondary);
        font-weight: 200;
    }

    &::-moz-placeholder {
        .color-token(textbox-placeholder-color, color-foreground-on-secondary);
        font-weight: 200;
    }

    &:-ms-input-placeholder {
        .color-token(textbox-placeholder-color, color-foreground-on-secondary);
        font-weight: 200;
    }

    &::placeholder {
        .color-token(textbox-placeholder-color, color-foreground-secondary);
        font-weight: 200;
        opacity: 1;
    }
}

input.textbox__control--large {
    height: 48px;
}

.textbox > svg,
.textbox .icon-btn > svg {
    .color-token(textbox-icon-color, color-foreground-secondary);
    display: inline-flex;
    .fill-token(textbox-icon-color, color-foreground-secondary);
    height: 100%;
    pointer-events: none;
    position: absolute;
    top: 0;
    width: 14px;
}

.textbox--icon-end {
    input.textbox__control,
    textarea.textbox__control {
        padding-right: 40px;
    }

    > svg:last-child {
        right: @spacing-200;
    }
}

input.textbox__control:not(:read-only):focus,
textarea.textbox__control:not(:read-only):focus {
    .border-color-token(textbox-focus-border-color, color-stroke-default);
    .background-color-token(textbox-focus-background-color, color-background-primary);
    outline: 0;
}

input.textbox__control[readonly]:focus,
textarea.textbox__control[readonly]:focus {
    outline: 0;
    text-decoration: underline;
}

.textbox > svg:first-child {
    left: @spacing-200;

    + input.textbox__control,
    + textarea.textbox__control {
        padding-left: 40px;
    }
}

.textbox__control--fluid {
    width: 100%;
}

// stylelint-disable no-descending-specificity
[dir="rtl"] {
    .textbox > svg:first-child {
        right: @spacing-200;

        & + input.textbox__control,
        & + textarea.textbox__control {
            padding-right: 40px;
        }
    }

    .textbox--icon-end {
        input.textbox__control,
        textarea.textbox__control {
            padding-left: 40px;
        }

        button.icon-btn {
            left: 0;
            right: auto;
        }

        > svg:last-child {
            left: @spacing-200;
            right: auto;
        }
    }
}
// stylelint-enable no-descending-specificity
