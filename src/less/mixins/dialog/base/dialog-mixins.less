
@dialog_max_width: 616px;

// Element width in percentage - (No of gutters * gutter width / number of elements)px
.create-grid(@cols, @gutter: 0, @gutter-exponent: 4, @size: 0, @min: 0, @max: 0) {
    & when not (@size = 0) {
        width: calc(round(@size / @cols * 100%) ~"-" round(@gutter * @gutter-exponent));
    }

    & when not (@min = 0) {
        min-width: calc(round(@min / @cols * 100%) ~"-" round(@gutter * @gutter-exponent));
    }

    & when not (@max = 0) {
        max-width: calc(round(@max / @cols * 100%) ~"-" round(@gutter * @gutter-exponent));
    }

    & when (@max = 0) {
        max-width: @dialog_max_width;
    }
}

.dialog-base() {
    background-color: fade(@dialog-background-color, 70%);
    bottom: 0;
    left: 0;
    -webkit-overflow-scrolling: touch;
    overflow-y: auto;
    position: fixed;
    right: 0;
    top: 0;
    will-change: background-color;
    z-index: 100000; // because global header has an element with 99999
}

.dialog-window(@width: @dialog_max_width) {
    display: flex;
    flex-direction: column;
    left: 0;
    margin: auto;
    max-width: @width;
    min-height: 55px;
    position: absolute;
    right: 0;
    will-change: opacity, transform;

    // The background for the dialog window is on this pseudo element.
    // This was done because `margin-bottom` in safari does not work properly with position absolute elements.
    &::before {
        background-color: @dialog-window-before-background-color;
        bottom: 15vh;
        content: "";
        left: 0;
        position: absolute;
        top: 0;
        width: 100%;
    }
}

.dialog-window-filler() {
    background-color: @dialog-window-before-modifiers-background-color;
    bottom: 0;
    -webkit-overflow-scrolling: touch;
    padding-bottom: 0;

    &::before {
        display: none;
    }
}

.dialog-header-content() {
    display: flex;
    // Fix for Safari not honoring min-height
    flex-shrink: 0;
    margin: 16px 16px 0;
    position: relative;

    h2 {
        flex: 1 1 auto;
        margin: 0;
    }

    & > :last-child:not(:only-child) {
        margin-left: 16px;
    }
}

.dialog-header-content-large() {
    margin: @dialog-large-gutter-size @dialog-large-gutter-size 0;

    & > :last-child {
        margin-left: @dialog-large-gutter-size;
        margin-top: initial;
    }
}

.dialog-body-content() {
    box-sizing: border-box;
    flex: 1 1 auto;
    margin: 16px;
    position: relative;

    & > :first-child {
        margin-top: 0;
    }

    & > :last-child {
        margin-bottom: 0;
    }
}

.dialog-body-content-large() {
    margin: @dialog-large-gutter-size;
}

.dialog-footer-content() {
    display: flex;
    flex-direction: column;
    justify-content: center;
    margin: 0 16px 16px;

    & > :not(:first-child) {
        margin-top: 16px;
    }
}

.dialog-footer-content-large() {
    flex-direction: row;
    justify-content: flex-end;
    margin: 0 @dialog-large-gutter-size @dialog-large-gutter-size;

    & > :not(:first-child) {
        margin-left: @dialog-large-gutter-size;
        margin-top: initial;
    }
}
